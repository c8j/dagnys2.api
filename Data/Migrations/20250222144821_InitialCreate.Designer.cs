// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dagnys2.api.Data;

#nullable disable

namespace dagnys2.api.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250222144821_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("dagnys2.api.Entities.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetLine")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("dagnys2.api.Entities.AddressType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AddressTypes");
                });

            modelBuilder.Entity("dagnys2.api.Entities.Ingredient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ItemNumber")
                        .IsUnique();

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("dagnys2.api.Entities.Phone", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("dagnys2.api.Entities.PhoneType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("PhoneTypes");
                });

            modelBuilder.Entity("dagnys2.api.Entities.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("dagnys2.api.Entities.SupplierAddress", b =>
                {
                    b.Property<int>("SupplierID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddressID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddressTypeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("SupplierID", "AddressID", "AddressTypeID");

                    b.HasIndex("AddressID");

                    b.HasIndex("AddressTypeID");

                    b.ToTable("SupplierAddresses");
                });

            modelBuilder.Entity("dagnys2.api.Entities.SupplierIngredient", b =>
                {
                    b.Property<int>("SupplierID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IngredientID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("SupplierID", "IngredientID");

                    b.HasIndex("IngredientID");

                    b.ToTable("SupplierIngredients");
                });

            modelBuilder.Entity("dagnys2.api.Entities.SupplierPhone", b =>
                {
                    b.Property<int>("SupplierID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PhoneID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PhoneTypeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("SupplierID", "PhoneID", "PhoneTypeID");

                    b.HasIndex("PhoneID");

                    b.HasIndex("PhoneTypeID");

                    b.ToTable("SupplierPhones");
                });

            modelBuilder.Entity("dagnys2.api.Entities.SupplierAddress", b =>
                {
                    b.HasOne("dagnys2.api.Entities.Address", "Address")
                        .WithMany("SupplierAddresses")
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dagnys2.api.Entities.AddressType", "AddressType")
                        .WithMany("SupplierAddresses")
                        .HasForeignKey("AddressTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dagnys2.api.Entities.Supplier", "Supplier")
                        .WithMany("SupplierAddresses")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("AddressType");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("dagnys2.api.Entities.SupplierIngredient", b =>
                {
                    b.HasOne("dagnys2.api.Entities.Ingredient", "Ingredient")
                        .WithMany("SupplierIngredients")
                        .HasForeignKey("IngredientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dagnys2.api.Entities.Supplier", "Supplier")
                        .WithMany("SupplierIngredients")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("dagnys2.api.Entities.SupplierPhone", b =>
                {
                    b.HasOne("dagnys2.api.Entities.Phone", "Phone")
                        .WithMany("SupplierPhones")
                        .HasForeignKey("PhoneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dagnys2.api.Entities.PhoneType", "PhoneType")
                        .WithMany("SupplierPhones")
                        .HasForeignKey("PhoneTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dagnys2.api.Entities.Supplier", "Supplier")
                        .WithMany("SupplierPhones")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phone");

                    b.Navigation("PhoneType");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("dagnys2.api.Entities.Address", b =>
                {
                    b.Navigation("SupplierAddresses");
                });

            modelBuilder.Entity("dagnys2.api.Entities.AddressType", b =>
                {
                    b.Navigation("SupplierAddresses");
                });

            modelBuilder.Entity("dagnys2.api.Entities.Ingredient", b =>
                {
                    b.Navigation("SupplierIngredients");
                });

            modelBuilder.Entity("dagnys2.api.Entities.Phone", b =>
                {
                    b.Navigation("SupplierPhones");
                });

            modelBuilder.Entity("dagnys2.api.Entities.PhoneType", b =>
                {
                    b.Navigation("SupplierPhones");
                });

            modelBuilder.Entity("dagnys2.api.Entities.Supplier", b =>
                {
                    b.Navigation("SupplierAddresses");

                    b.Navigation("SupplierIngredients");

                    b.Navigation("SupplierPhones");
                });
#pragma warning restore 612, 618
        }
    }
}
